return(.)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[1])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3 <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_nodes('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_nodes(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_node(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[1])
url.bovespa.empresas.pesquisa[1]
url.bovespa.empresas.pesquisa[[1]]
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3 <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_nodes('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_nodes(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_node(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
# tibble(empresa, setores,
#        patrimonio.liquido, lucro.liquido,
#        atividades.operacionais, qtd.acoes, mil) %>%
return(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[1])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3 <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_nodes('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_nodes(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_node(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
# tibble(empresa, setores,
#        patrimonio.liquido, lucro.liquido,
#        atividades.operacionais, qtd.acoes, mil) %>%
return(patrimonio.liquido)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[1])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3 <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_nodes('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_nodes(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_node(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_node(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[3])
web_scraping.B3(url.bovespa.empresas.pesquisa[4])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3 <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_elements('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_elements('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_elements(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_element(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_element(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_elements('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
web_scraping.B3(url.bovespa.empresas.pesquisa[4])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3_Saulo.Guerra <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_elements('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_elements('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_elements(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_element(xpath = ".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_element(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_elements('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
url.bovespa.empresas.pesquisa
url.bovespa.empresas.pesquisa[4]
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3_Saulo.Guerra <- function(url.empresa){
url(url.empresa) %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_elements('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_elements('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_elements(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_element(xpath = ".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_element(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_elements('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
web_scraping.B3_Saulo.Guerra(url.bovespa.empresas.pesquisa[4])
# Conteúdo das Páginas (Web Scraping dos dados empresariais)
web_scraping.B3_Saulo.Guerra <- function(url.empresa){
url.empresa %>%
read_html(encoding = 'Latin1') -> empresa.pagina
empresa.pagina %>%
html_elements('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text(.) -> empresa
empresa.pagina %>%
html_elements('iframe') %>%
.[2] %>% html_attr('src') %>%
str_remove_all('../../') %>%
{glue(url.bovespa, .)} %>%
read_html(.) -> iframe
iframe %>%
html_elements(xpath = "//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text(.) -> setores
iframe %>%
html_element(xpath = ".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text(.) -> patrimonio.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text(.) -> lucro.liquido
iframe %>%
html_element(xpath = ".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text(.) -> atividades.operacionais
iframe %>%
html_element(xpath = ".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text(.) -> qtd.acoes
iframe %>%
html_elements('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>% html_text(.) %>%
str_remove_all('\\r|\\n') %>%
str_trim(.) %>%
endsWith('mil') -> mil
tibble(empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, qtd.acoes, mil) %>%
return(.)
}
extrai_informacoes <- function(link) {
conteudo <- link %>%
read_html(encoding = 'Latin1')
nome.empresa <- conteudo %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text()
conteudo.iframe <- conteudo %>% #a partir do conteúdo da página
html_nodes('iframe') %>% #seleciona a tag iframe
.[2] %>% #não bastasse 1, são 2 iframes na página, queremos apenas o seguindo
html_attr('src') %>% # o atributo src contém a página que foi inserida no iframe
str_replace_all(., '../../', '') %>% #substituimos o endereçamento relativo
paste0(base.url, .) %>% #colamos com base.url para criar endereçamento absoluto
read_html() #finalmente pegamos o conteúdo do iframe!
setores <- conteudo.iframe %>%
html_nodes(xpath="//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text()
patrimonio.liquido <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text()
lucro.liquido <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text()
atividades.operacionais <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text()
total.acoes <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text()
mil <- conteudo.iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>%
html_text() %>%
str_replace_all('\\r|\\n', '') %>%
trimws() %>%
endsWith('mil')
resultado <- data.frame(
nome.empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, total.acoes, mil,
stringsAsFactors = FALSE)
return(resultado)
}
extrai_informacoes(url.bovespa.empresas.pesquisa[4])
extrai_informacoes <- function(link){
conteudo <- link %>%
read_html(encoding = 'Latin1')
nome.empresa <- conteudo %>%
html_nodes('#ctl00_contentPlaceHolderConteudo_MenuEmpresasListadas1_lblNomeEmpresa') %>%
html_text()
conteudo.iframe <- conteudo %>% #a partir do conteúdo da página
html_nodes('iframe') %>% #seleciona a tag iframe
.[2] %>% #não bastasse 1, são 2 iframes na página, queremos apenas o seguindo
html_attr('src') %>% # o atributo src contém a página que foi inserida no iframe
str_replace_all(., '../../', '') %>% #substituimos o endereçamento relativo
paste0(url.bovespa, .) %>% #colamos com base.url para criar endereçamento absoluto
read_html() #finalmente pegamos o conteúdo do iframe!
setores <- conteudo.iframe %>%
html_nodes(xpath="//td[contains(., 'Classificação Setorial:')]/following-sibling::td[1]") %>%
html_text()
patrimonio.liquido <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'nio Líquido')]/following-sibling::td[1]") %>%
html_text()
lucro.liquido <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Lucro (Prejuízo) do Período')]/following-sibling::td[1]") %>%
html_text()
atividades.operacionais <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Atividades Operacionais')]/following-sibling::td[1]") %>%
html_text()
total.acoes <- conteudo.iframe %>%
html_node(xpath=".//td[contains(., 'Total de Ações')]/following-sibling::td[1]") %>%
html_text()
mil <- conteudo.iframe %>%
html_nodes('#divDadosEconomicoFinanceiros h3') %>%
.[1] %>%
html_text() %>%
str_replace_all('\\r|\\n', '') %>%
trimws() %>%
endsWith('mil')
resultado <- data.frame(
nome.empresa, setores,
patrimonio.liquido, lucro.liquido,
atividades.operacionais, total.acoes, mil,
stringsAsFactors = FALSE)
return(resultado)
}
extrai_informacoes(url.bovespa.empresas.pesquisa[4])
# 1. PACOTES
pkg <- c('quantmod', 'BatchGetSymbols', 'PerformanceAnalytics',
'tidyquant', 'GetDFPData2', 'glue', 'tidyverse')
# 1. PACOTES
pkg <- c('quantmod', 'BatchGetSymbols', 'PerformanceAnalytics',
'tidyquant', 'GetDFPData2', 'tidyverse')
# 1. PACOTES
pkg <- c('quantmod', 'BatchGetSymbols', 'PerformanceAnalytics',
'tidyquant', 'GetDFPData2', 'glue', 'tidyverse')
lapply(pkg, function(x)
if(!require(x, character.only = T))
{install.packages(x); require(x)})
lapply(pkg, function(x)
if(!require(x, character.only = T))
{install.packages(x); require(x)})
# 2. DADOS
GetDFPData2::get_info_companies()
# 2. DADOS
empresas.bovespa <- get_info_companies()
# 2. DADOS
bovespa.empresas.info <- get_info_companies()
# 2. DADOS
bovespa.empresas.info <- get_info_companies()
glimpse(bovespa.empresas.info)
bovespa.empresas.info %>%
group_by(SETOR_ATIV) %>%
tally(.)
bovespa.empresas.info$DENOM_SOCIAL
bovespa.empresas.info$DENOM_COMERC
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617)
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2019) -> View()
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2019,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2019,
last_year = 2020
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2019,
last_year = 2020,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2018,
last_year = 2019,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2018,
last_year = 2020,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2018,
last_year = 2019,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2018,
last_year = 2019,
type_docs = 'DRE')
GetDFPData2::get_dfp_data(companies_cvm_codes = '7617',
first_year = '2018',
last_year = '2019',
type_docs = 'DRE')
?get_dfp_data()
# 2. DADOS
getwd()
setwd('C:/Users/Sony/Documents/GitHub/R-Fin/Fin Data')
cache.path <- getwd()
cache.path
cache.path <- {getwd(),'/Cache'}
cache.path
cache.path <- {getwd()'/Cache'}
{getwd()}{'/Cache'}
glue({getwd()'/Cache'})
glue({getwd(),'/Cache'})
glue('{getwd()}/Cache')
cache.path <- paste0(getwd(), '/Cache')
cache.path
GetDFPData2::get_dfp_data(companies_cvm_codes = 7617,
first_year = 2018,
last_year = 2019,
type_docs = 'DRE',
use_memoise = T,
cache_folder = cache.path)
getwd()
cache.path <- 'C:\Users\Sony\Documents\GitHub\R-Fin\Fin Data/Cache'
cache.path <- 'C:\Users\Sony\Documents\GitHub\R-Fin\Fin Data/Cache'
cache.path <- paste0(getwd(), '/Cache')
cache.path
# 2. DADOS
setwd('C:/Users/Sony/Documents/GitHub/R-Fin/')
# 1. PACOTES
pkg <- c('quantmod', 'BatchGetSymbols', 'PerformanceAnalytics',
'tidyquant', 'GetDFPData2', 'glue', 'tidyverse')
lapply(pkg, function(x)
if(!require(x, character.only = T))
{install.packages(x); require(x)})
getwd()
